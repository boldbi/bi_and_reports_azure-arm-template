@using System.Configuration
@using Syncfusion.Server.Base.Helpers

@{
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');

    var userDetail = (User)ViewBag.UserDetail;
    var isAduser = ViewBag.IsAdUser;
    var showResendButton = !userDetail.IsActive ? "d-block" : "d-none";
    var showActivationButton = (userDetail.Status.ToString() == "InActive") ? "d-block" : "d-none";
    var showDeactivateButton = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower()) ? "d-block" : "d-none";
    var showDropdown = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower() && !ViewBag.isAdUser) ? "d-block" : "d-none";
    var showActive = (userDetail.Status.ToString() == "Active" && userDetail.Email.ToLower() == ViewBag.LoggedUser.ToLower()) ? "d-block" : "d-none";
    var showActiveUser = (userDetail.Status.ToString() == "Active" && ViewBag.IsAdUser) ? "d-block" : "d-none";
    var showInactive = (showDropdown == "hide" && showActive == "hide" && showActiveUser == "hide") ? "d-block" : "d-none";
    var groupList = ViewBag.GroupList;
    ViewBag.Title = " [[[User Profile]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    var idpreferenceId = Context.Session.GetString("idpReferenceId") != null ? Context.Session.GetString("idpReferenceId").ToString() : string.Empty;
    var idPUrl = globalAppSettings.SystemSettings.IDPUrl;
    var isProfileTab = ViewBag.ActiveTab == null || ViewBag.ActiveTab == "profile" ? "active" : string.Empty;
    var isAttributeTab = ViewBag.ActiveTab != null && ViewBag.ActiveTab == "attributes" ? "active" : string.Empty;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.EditUsers);
    var isAdmin = _identityResponse.IsAdmin;
    var permissions = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var autoGeneratedEmailDomain = ServerAppConfig.AppSettings.AutoGeneratedEmailDomain;
    var userId = userDetail.UserId;
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-management-profile.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/user-management-profile.css")" crossorigin="anonymous" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-management-profile.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/user-management-profile.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/user-management-profile.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/user-management-profile.min.css")" crossorigin="anonymous" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/user-management-profile.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/user-management-profile.min.js")" crossorigin="anonymous"></script>
    </environment>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript">
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink.TrimEnd('/')";
        var checkMailSettingUrl = "@Url.Action("checkmailsettingsexist", "Administration")";
        var activateDeactivateUserUrl = "@Url.Action("ActivateDeactivateUser", "UserManagement")";
        var resendactivationcodeUrl = "@Url.Action("resendactivationcode", "UserManagement")";
        var updateprofilepictureUrl = "@Url.Action("updateprofilepicture", "user")";
        var fileUploadUrl = "@Url.Action("Upload", "fileupload")";
        var UpdatePasswordUrl = "@Url.Action("UpdatePassword", "UserManagement")";
        var updateUserProfileUrl = "@Url.Action("UpdateUserProfile", "UserManagement")";
        var emailSettingsUrl = "@Url.Action("e-mail-settings", "administration")";
        var deleteSingleFromUserListUrl = "@Url.Action("DeleteSingleFromUserList", "UserManagement")";
        var userPageUrl = "@Url.Action("Index", "UserManagement")";
        var avatarUrl = "@(idPUrl + Url.Action("Avatar", "User"))";
        var deleteavatarUrl = "@Url.Action("deleteavatar", "UserManagement")";
        var getUserAttributesUrl = "@Url.Action("GetUserAttributes", "CustomAttribute")";
        var getdefaultavatarUrl = "@Url.Action("getdefaultavatar", "User")";
        var isPresentEmailId = "@Url.Action("IsPresentEmailId", "UserManagement")";
        var isUsernameExistsUrl = "@Url.Action("IsUsernameExists", "UserManagement")";
        var showDropdown = "@showDropdown";
        var isEmailRequired = @Json.Serialize(globalAppSettings.SystemSettings.IsEmailRequired);
        var autoGeneratedEmailDomain = "@autoGeneratedEmailDomain";
        var userId = @userId;

        $(document).ready(function () {
            $("#avatar-button-click, #avatar-delete-click").css("display","none");
            $("#status-dom").hide();

            window.dateFormat = "@globalAppSettings.SystemSettings.DateFormat";
            var fulldata = @Json.Serialize(ViewBag.UserDetail);
            editUser(fulldata,"@globalAppSettings.SystemSettings.DateFormat");
            if (@ViewBag.EditUserProfile > 0) {
                $("#edit").trigger("click");
                if(showDropdown == "show"){
                    $("#status-div").addClass("line-spacing");
                }
            }
            $('[data-bs-toggle="tooltip"]').tooltip();
            $(document).on("click", ".popup-close", function (e) {
                $(".edit-profile-field").attr("value","updateUserProfileUrl");
                $("#profile-picture").attr("src", "@reportServerResourceUrl/cdn/images/preview.jpg");
                $('#upload-image').attr("disabled", "disabled");
                if ($(".img-container").children().hasClass("jcrop-active")) {
                    $('#profile-picture').data("Jcrop").destroy();
                }
                $(function () {
                    $("#avatar-upload-box").ejDialog({
                        showOnInit: false,
                        allowDraggable: true,
                        enableResize: false,
                        width: "600px",
                        enableModal: true,
                        showHeader: false,
                        close: "DialogBoxClose",
                        closeOnEscape: true
                    });
                });
                eDialog = $("#avatar-upload-box").data("ejDialog");
                eDialog.close();
            });

            $("#UserAttributesGrid").ejGrid({
                dataSource: null,
                gridLines: ej.Grid.GridLines.None,
                allowSorting: true,
                allowSearching: true,
                allowPaging: true,
                allowSelection: true,
                allowFiltering: true,
                filterSettings: { filterType: "menu" },
                pageSettings: { pageSize: 8 },
                enableRowHover: true,
                enableAltRow: false,
                create: "initialUserGridCreate",
                dataBound: function (args) {
                    $('[data-bs-toggle="tooltip"]').tooltip();
                },
                columns: [
                    { field: 'Name', templateID: "#attribute-name-template", headerText: '[[[Name]]]', width: 40, allowSorting: true, allowFiltering: true },
                    { field: 'Value', templateID: "#attribute-value-template", headerText: '[[[Value]]]', width: 60, allowSorting: true, allowFiltering: true },
                    { field: 'Description', templateID: "#attribute-description-template", headerText: '[[[Description]]]', width: 50, allowSorting: true, allowFiltering: true },
                    { field: 'ModifiedDateString', headerText: '[[[Last Modified]]]', width: 40, allowSorting: true, allowFiltering: false },
                    { field: 'InheritedFrom', headerText: '[[[Inherited From]]]', templateID: "#inherited", width: 40, allowSorting: true, allowFiltering: false },
                    { field: 'Options', headerText: '', templateID: "#options", width: 20, allowSorting: false, allowFiltering: false }
                ]
            });

            $.ajax({
                type: "GET",
                url: getUserAttributesUrl,
                data: { id: fulldata.UserId },
                success: function (result) {
                    if (result.Status) {
                        var userAttributesGrid = $("#UserAttributesGrid").data("ejGrid");
                        userAttributesGrid.dataSource(result.Attributes);
                    }
                    $("#UserAttributesGrid").ejWaitingPopup("hide");
                }
            });
        });
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="attribute-name-template">
        <span class="grid-content" title="{{:Name}}" data-bs-toggle="tooltip">{{:Name}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="attribute-description-template">
        <span class="grid-content" title="{{:Description}}" data-bs-toggle="tooltip">{{:Description}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="attribute-value-template">
        <span class="grid-content" title="{{:Value}}" data-bs-toggle="tooltip">{{:Value}}</span>
    </script>
}

@section MainSection {
    @await Html.PartialAsync("_UserMenu")
    <environment include="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <div id="view-user-profile">
        <div id="view-profile-info">
            <span id="is-aduser">@ViewBag.IsAdUser</span>
            <span id="logged-user">@ViewBag.LoggedUser</span>
            <div id="edit-user-profile-master" role="tabpanel" class="admin-page-container user-permission">
                <div class="row align-items-center admin-page-header import-area flex-nowrap">
                    <div class="col-md-6 d-flex align-items-center flex-shrink-1 flex-nowrap no-padding">
                        <a class="back-button d-flex align-items-center me-1"
                           href="@Url.Action("Index","UserManagement")"
                           data-bs-toggle="tooltip"
                           data-bs-placement="top"
                           title="[[[Users]]]"
                           data-container="body">
                            <i class="su su-arrow-back back-navigaion img-size"> </i>
                        </a>
                        <hgroup>
                            <h2 class="page-title adjust-style-for-backarrow no-margin" id="display-name">
                                @ViewBag.UserDetail.DisplayName
                            </h2>
                        </hgroup>
                    </div>

                    <div class="col-md-6 d-flex justify-content-end align-items-center gap-2 flex-shrink-0 no-padding">
                        @if (isAdmin || permissions[PermissionEntity.UsersandGroups] &&
                       (permissions[PermissionEntity.AllPermissions] || permissions[PermissionEntity.SpecificPermissions]))
                        {
                            <a href="@Url.Action("userpermission", "permission")?userId=@userDetail.UserId" title="">
                                <input type="button" class="link-button app-btn-link" value="[[[Manage Permissions]]]">
                            </a>
                        }

                        <input type="button"
                               class="primary-button app-btn-primary"
                               id="add-custom-attribute"
                               title=""
                               value="[[[Add Attribute]]]"
                               data-id="@userDetail.UserId" />

                        @if (userDetail.Email.ToLower() != ViewBag.LoggedUser.ToLower() &&
                       (isAdmin || (!isAdmin && !userDetail.IsAdmin && permissions[PermissionEntity.UsersandGroups])))
                        {
                            <div id="profile-action-section" class="dropdown">
                                <a class="dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="su su-options-menu"></span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" role="menu" id="profile-action-menus">
                                    <li id="deactivate-user" class="deactivate-user-option dropdown-submenu @showDeactivateButton">
                                        <a class="dropdown-option">
                                            <span>[[[Deactivate User]]]</span>
                                        </a>
                                    </li>
                                    <li id="activate-user" class="activate-user-option dropdown-submenu @showActivationButton">
                                        <a class="dropdown-option">
                                            <span>[[[Activate User]]]</span>
                                        </a>
                                    </li>
                                    <li id="resend-activation" class="dropdown-submenu @showResendButton">
                                        <a class="dropdown-option">
                                            <span>[[[Resend Activation Code]]]</span>
                                        </a>
                                    </li>
                                    <li id="delete-user" class="dropdown-submenu">
                                        <a class="dropdown-option">
                                            <span>[[[Delete User]]]</span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        }
                    </div>
                </div>
                <nav>
                    <ul id="ad-tab-nav" class="nav nav-tabs" role="tablist">
                        <li id="profile-tab" role="presentation" class="nav-item">
                            <a href="#user-profile-tab" id="user-profile" class="nav-link active" aria-controls="user-profile-tab" role="tab" data-bs-toggle="tab">[[[Profile]]]</a>
                        </li>
                        <li id="attribute-tab" role="presentation" class="nav-item">
                            <a href="#user-attribute-tab" id="user-attribute" class="nav-link" aria-controls="user-attribute-tab" role="tab" data-bs-toggle="tab">[[[Attributes]]]</a>
                        </li>
                    </ul>
                </nav>
                <div class="tab-content">
                    <div id="user-profile-tab" role="tabpanel" class="tab-pane @isProfileTab">
                        <div class="user-profile-section col-lg-12 col-md-12 col-sm-12 no-padding" style="float:left;">
                            <div class="img-view-holder col-lg-12 col-md-12 col-sm-10 col-12" style="border: 0px">
                                <div class="profile-pic-tag" data-id="@idpreferenceId" data-type="user" data-display-name="@userDetail.DisplayName" data-image-size="120" data-bs-toggle="tooltip" title="@userDetail.DisplayName" data-bs-placement="top" style="background-color: rgb(255, 161, 172); width: 120px; height: 120px; line-height: 120px;"> </div>
                            </div>
                            <div id="edit-user-profile-form-div" class="col-sm-7 col-md-7 col-lg-7 no-padding validation d-flex align-items-start flex-column">
                                <form class="edit-user-profile-form row g-0" autocomplete="off" novalidate="novalidate">
                                    @if (ServerAppConfig.IsSelfHosted)
                                    {
                                        <div class="form-group no-padding line-spacing">
                                            <label class="label-panel text-end app-textbox-label">[[[Username]]]<span class="mandatory">*</span></label>
                                            <div class="col-sm-5 col-12 group-list">
                                                @Html.TextBox("user-username", userDetail.Username, new { id = "user-username", placeholder = "[[[Please enter username]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled", maxlength = "254", minlength = "3" })
                                                <span id="user-name-validation" class="alert-messages validation-message"></span>
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group no-padding line-spacing">
                                        <label class="label-panel text-end app-textbox-label">[[[First Name]]]<span class="mandatory">*</span></label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("user-firstname", userDetail.FirstName, new { id = "user-firstname", placeholder = "[[[Please enter first name]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                            <span id="first-name-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                    <div class="form-group no-padding line-spacing">
                                        <label class="label-panel text-end app-textbox-label">
                                            [[[Last Name]]]
                                        </label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("user-lastname", userDetail.LastName, new { id = "user-lastname", placeholder = "[[[Please enter last name]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                            <span id="last-name-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                    <div class="form-group no-padding line-spacing">
                                        <label class="label-panel text-end app-textbox-label">[[[Email]]]</label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @if (ServerAppConfig.IsSelfHosted)
                                            {
                                                @Html.TextBox("user-email", userDetail.CanShowEmail ? userDetail.Email : string.Empty, new { id = "user-email", placeholder = "[[[Please enter email address]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled", style = "margin-top:0" })
                                            }
                                            else
                                            {
                                                <a class="back-button float-end" id="user-email" href="mailto:@userDetail.Email">@(userDetail.CanShowEmail ? userDetail.Email : string.Empty)</a>
                                            }
                                            <span id="email-duplicate-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                    <div class="form-group no-padding line-spacing">
                                        <label class="label-panel text-end app-textbox-label">[[[Phone]]]</label>
                                        <div class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("user-phonenumber", userDetail.ContactNumber, new { id = "user-phonenumber", placeholder = "[[[Please enter phone number]]]", @class = "form-control content-size edit-user-profile-field disable-content", disabled = "disabled" })
                                            <span id="contact-validation" class="alert-messages validation-message"></span>
                                        </div>
                                    </div>
                                    <div class="form-group no-padding margin-top20" id="group-div">
                                        <label class="label-panel text-end app-textbox-label" id="groups">[[[Groups]]]</label>
                                        <div class="col-sm-5 col-12 group-list groups">
                                            @{
                                                for (var i = 0; i < ViewBag.GroupList.Count; i++)
                                                {
                                                    <div class="content-size" title="@ViewBag.GroupList[i].Name" data-html="false" data-container="body" data-bs-toggle="tooltip" data-bs-placement="right">
                                                        @ViewBag.GroupList[i].Name
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group no-padding margin-top10" id="activation-status-div">
                                        <label class="label-panel text-end app-textbox-label">[[[Email Verification]]]</label>
                                        @if (userDetail.IsActivated)
                                        {
                                            <div id="completed-status" class="col-sm-5 col-12 group-list">
                                                <span class="badge bg-success">[[[Completed]]]</span>
                                            </div>
                                        }
                                        else
                                        {
                                            <div id="pending-status" class="col-sm-5 col-12 group-list">
                                                <span class="badge bg-warning">[[[Pending]]]</span>
                                            </div>
                                        }
                                    </div>

                                    <div class="mb-3 margin-top10" id="status-div">
                                        <label class="label-panel text-end app-textbox-label">[[[Status]]]</label>
                                        <div id="status-show" class="col-sm-5 col-12 group-list">
                                            @Html.TextBox("status-user", "", new { id = "status-user", @class = "content-size status", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </form>
                            </div>
                            @if (ServerAppConfig.IsSelfHosted && userDetail.DirectoryType == DirectoryType.Local && (isAdmin || (!isAdmin && !userDetail.IsAdmin)))
                            {
                                <div id="edit-button">
                                    <input type="button" class="secondary-button app-btn-secondary float-end" id="edit" title="" value="[[[Edit Profile]]]">
                                    <input type="button" class="secondary-button app-btn-secondary float-end popup-close" title="" id="cancel-button" value="[[[Cancel]]]">
                                    <input type="button" class="primary-button app-btn-primary float-end inactive-content" id="save-button" title="" value="[[[Save]]]">
                                </div>
                            }
                            else if (ServerAppConfig.IsSelfHosted && !isAdmin && userDetail.IsAdmin)
                            {
                                <div id="edit-button" class="disabled-edit-button" title="[[[You do not have the privilege to edit the admin user’s profile.]]]" data-bs-toggle="tooltip">
                                    <input type="button" class="secondary-button float-end diasbled-edit-button-hover" id="edit" value="[[[Edit Profile]]]" disabled="disabled">
                                </div>
                            }

                            <div class="col-sm-4 col-md-4 col-lg-3 no-padding" id="message">
                                <h5 id="updation-validation-message"></h5>
                            </div>
                        </div>
                        @if (userDetail.DirectoryType != DirectoryType.Local)
                        {
                            if (ServerAppConfig.IsSelfHosted)
                            {
                                <div id="azure-user-info" class="col-12 no-padding">* [[[Profile editing is not currently supported for Azure Active Directory, Windows Active Directory, Office 365, database, JWT SSO, OAuth and OpenID Connect accounts.]]]</div> }
                            else
                            {
                                <div id="azure-user-info" class="col-12 no-padding">* [[[Profile editing is not currently supported for]]] Azure Active Directory, Office 365, LinkedIn [[[and]]] database [[[accounts.]]]</div>}
                        }
                    </div>
                    <div id="user-attribute-tab" role="tabpanel" class="tab-pane @isAttributeTab">
                        <div class="user-profile-section col-lg-12 col-md-12 col-sm-12 col-12">
                            <div id="UserAttributesGrid">
                            </div>
                        </div>
                        <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="options">
                            <div class="user-hover-options">
                                {{if AttributeType ==  @((int)AttributeType.User)}}
                                <a href="#" title="[[[Edit]]]" id="edit-user-attribute" data-bs-toggle="tooltip" data-id="{{:Id}}" data-name="user">
                                    <i class="su su-edit"></i>
                                </a>
                                <a class="delete-class" href="#" title="[[[Remove]]]" id="remove-user-attribute" data-bs-toggle="tooltip" data-id="{{:Id}}" data-name="user">
                                    <i class="su su-delete"></i>
                                </a>
                                {{else}}
                                <a class="prevent-default-action" href="#" title="[[[Edit]]]" data-bs-toggle="tooltip" data-content="{{:Id}}">
                                    <i class="su su-edit disabled-icon-color"></i>
                                </a>
                                <a class="delete-class prevent-default-action" href="#" title="[[[Remove]]]" data-bs-toggle="tooltip" data-content="{{:Id}}">
                                    <i class="su su-delete disabled-icon-color"></i>
                                </a>
                                {{/if}}
                            </div>
                        </script>
                        <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="inherited">
                            {{if AttributeType ==  @((int)AttributeType.Group)}}
                            <div title="{{:Inherited}}">
                                <a href="@Url.Action("ViewGroup", "Group")/{{:GroupId}}?tab=attributes">{{:Inherited}}</a>
                            </div>
                            {{else AttributeType ==  @((int)AttributeType.Site)}}
                            <div title="{{:Inherited}}">
                                {{:Inherited}}
                            </div>
                            {{else AttributeType ==  @((int)AttributeType.IdpProfile)}}
                            <div title="{{:Inherited}}">
                            {{:Inherited}}
                            </div>
                            {{/if}}
                        </script>
                    </div>
                </div>
            </div>
            <input type="hidden" id="image" value="" />
            <input type="hidden" id="user-id" value="@ViewBag.UserDetail.UserId" />
        </div>
        @*@if (!ViewBag.IsAdUser)
            {
                <div id="change-password" class="change-password-div">
                    <div class="col-12 col-sm-12 col-md-12 col-lg-12" id="change-password-content">
                        <form class="col-11 col-sm-11 col-md-11 col-lg-11 change-password-form no-padding">
                            <div class="user-profile-table" cellpadding="20">
                                <div class="col-12 col-sm-12 col-md-12 col-lg-12 no-padding password-div">
                                    <div class="col-12 col-sm-5 col-md-5 col-lg-4 no-padding label-section text-right">
                                        @Html.Label("new-password", "[[[New Password]]]", new { @class = "password-label" })
                                        <span class="mandatory">*</span>
                                    </div>
                                    <div class="col-11 col-sm-6 col-md-4 col-lg-3 password-section">
                                        @Html.Password("fake-password", new { id = "fake-password", @class = "fake-password-avoid-autocomplete" })
                                        @Html.Password("new-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "new-password", name = "new-password", maxlength = "4000" })
                                        <span class="su su-eye view-green show-hide-password"></span>
                                        <span id="new-password-validate" class="password-validate-holder"></span>
                                    </div>
                                </div>
                                <div id="confirm-password-section" class="col-12 col-sm-12 col-md-12 col-lg-12 no-padding password-div">
                                    <div class="col-12 col-sm-5 col-md-5 col-lg-4 no-padding confirm-section label-section text-right">
                                        @Html.Label("confirm-password", "[[[Confirm Password]]]", new { @class = "password-label" })
                                        <span class="mandatory">*</span>
                                    </div>
                                    <div class="col-11 col-sm-6 col-md-4 col-lg-3 confirm-section password-section">
                                        @Html.Password("confirm-password", "", new { @class = "form-control password-fields-user-profile-edit", id = "confirm-password", name = "confirm-password", maxlength = "4000" })
                                        <span class="su su-eye view-green show-hide-password"></span>
                                        <span id="confirm-password-validate" class="password-validate-holder"></span>
                                    </div>
                                </div>
                            </div>
                        </form>
                        <div class="col-1 no-padding button-section">
                            <input type="button" class="primary-button app-btn-primary password-save-button profile-save-button float-end" value="[[[Update]]]" onclick="onUserChangePasswordClick()">
                        </div>
                        <div class="col-12 col-sm-3 col-md-2 col-lg-2 no-padding validation">
                            <h5 id="password-validation" class="password-validate-holder"></h5>
                        </div>
                    </div>
                </div>
            }*@
    </div>
    <div id="userprofile-delete-confirmation" class="no-padding">
        <div class="col-lg-12 no-padding modal-content" id="popup-container">
            <div class="col-md-12 modal-header">
                <div class="col-8 no-padding">
                    <span class="su su-delete head-icon"></span>
                    <span class="modal-title">[[[Delete User]]]</span>
                </div>
                <div class="col-4 no-padding">
                    <a href="#" id="delete-dialog-close-link" class="popup-close float-end">
                        <span class="su su-close"></span>
                    </a>
                    <div id="folder-setting-arrow" class="downArrow" style="left: 37px;"></div>
                </div>
            </div>
            <div class="modal-body col-12 no-padding">
                <div class="col-12 no-left-padding no-bottom-padding no-right-padding">
                    <div class="delete-msg">[[[Are you sure you want to delete the User?]]]</div>
                </div>
            </div>
            <div class="col-12 modal-footer">
                <div class="col-12 no-padding margin-top float-end">
                    <input type="button" id="delete-item" class="critical-action-button app-btn-danger margin-right" value="[[[Yes]]]" tabindex="1" autofocus />
                    <input type="button" id="delete-dialog-close-button" class="secondary-button app-btn-secondary popup-close" value="[[[No]]]" tabindex="2" />
                </div>
            </div>
        </div>
    </div>

    <span id="baseurl" data-url="@Url.Content("~/")"></span>
    @await Html.PartialAsync("_ProfilePictureUploadBox", globalAppSettings.SystemSettings.CDNLink)

    @await Html.PartialAsync("../UserManagement/_LimitUserCreation")
    @await Html.PartialAsync("../CustomAttribute/_CustomAttribute")
}