@using Syncfusion.Server.Base.Helpers

@{
    var globalAppSettings = _globalAppSettings;
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    ViewBag.Title = "[[[Synchronize Users]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.SyncDatabaseUsers);
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/import-database-users-sync.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/import-database-users-sync.css")" crossorigin="anonymous" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/synchronize-users.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/synchronize-users.js")" crossorigin="anonymous"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/import-database-users-sync.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/import-database-users-sync.min.css")" crossorigin="anonymous" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/synchronize-users.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/synchronize-users.min.js")" crossorigin="anonymous"></script>
    </environment>

    <script nonce="@Context.Items["ScriptNonce"]">
        var synchronizeSelectedDbUsersUrl = "@Url.Action("SynchronizeSelectedImportedUsers", "UserManagement")";
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="user-profile-template">
        <a class="user-name" title="{{:FullName}}" data-bs-toggle="tooltip" href="@Url.Action("ViewProfile", "UserManagement")?id={{:UserId}}">{{:FullName}}</a>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="username-template">
        <span title="{{:Username}}" class="grid-content" data-bs-toggle="tooltip">
            {{:Username}}
        </span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="email-template">
        <span title="{{:EmailId}}" class="grid-content" data-bs-toggle="tooltip">
            {{:EmailId}}
        </span>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="checkbox-row-template">
        <input type="checkbox" class="checkbox-row material-checkbox" name="checkbox-row" data-checked-id="{{:UserId}}" id="row-check{{:UserId}}" />
        <input name="row-check{{:UserId}}" type="hidden" value="false">
        <label for="row-check{{:UserId}}"> </label>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="checkbox-header-template">
        @Html.CheckBox("checkbox-header", new { @class = "material-checkbox" })
        @Html.Label("checkbox-header", " ", new { @class = "checkbox-header-label" })
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="name-header">
        <div class="item-header">[[[Name]]]</div>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="username-header">
        <div class="item-header">[[[Username]]]</div>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="email-header">
        <div class="item-header">[[[Email Address]]]</div>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="userid-header">
        <div class="item-header">[[[User id]]]</div>
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="user-detail-validation">
        {{if IsDuplicated}}
        <span class="su su-login-error user-import-validation" title="{{:DisplayMessage}}" data-html="true" data-bs-toggle="tooltip" data-bs-placement="left"></span>
        {{/if}}
    </script>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript" language="javascript">
        ej.support.stableSort = false;
        $("#search-ad-users").val("");
        var data = @Json.Serialize(ViewBag.DatabaseUsers);
        $(function () {
            data = ej.parseJSON(data);
            GridLocalization();
            $("#user_grid").ejGrid({
                dataSource: data,
                gridLines: ej.Grid.GridLines.None,
                allowPaging: true,
                enableAltRow: false,
                enableRowHover: true,
                allowSorting: true,
                allowSelection: true,
                allowScrolling: false,
                allowFiltering: true,
                allowSearching: true,
                actionBegin: "fnActionBegin",
                locale: "en-US",
                selectionType: ej.Grid.SelectionType.Multiple,
                pageSettings: { pageSize: 20 },
                templateRefresh: "refreshTemplate",
                filterSettings: { filterType: "menu" },
                selectionSettings: { selectionMode: ["row"] },
                dataBound: function (args) {
                    $('[data-bs-toggle="tooltip"]').tooltip();
                    $("#checkbox-header").change(headCheckboxOnChange);
                    this.model.indexes = {}; /* Additional property*/
                    var selecteduserIdValues = [];
                },

                recordClick: "fnRecordClick",
                create: "fnOnUserGridCreate",
                actionComplete: "fnOnUserGridActionComplete",
                columns: [
                        {
                            headerTemplateID: "#checkbox-header-template",
                            template: true,
                            templateID: "#checkbox-row-template",
                            textAlign: ej.TextAlign.Center,
                            allowFiltering: false,
                            width: 20
                        },
                        {
                            template: true,
                            allowSorting: true,
                            templateID: "#user-profile-template",
                            headerText: "[[[Name]]]",
                            headerTemplateID: "#name-header",
                            width: 115,
                            field: "FullName",
                            allowFiltering: true,
                            type: "string"
                        },
                        {
                            template: true,
                            allowSorting: true,
                            templateID: "#username-template",
                            headerText: "[[[Username]]]",
                            headerTemplateID: "#username-header",
                            width: 115,
                            field: "Username",
                            allowFiltering: true,
                            type: "string",
                            visible: isSelfHosted
                        },
                        {
                            field: "EmailId",
                            headerText: "[[[Email Address]]]",
                            templateID: "#email-template",
                            headerTemplateID: "#email-header",
                            type: "string",
                            allowFiltering: true,
                            width: 150
                        },
                        {
                            field: "UserId",
                            headerText: "[[[User id]]]",
                            headerTemplateID: "#userid-header",
                            type: "string",
                            cssClass: "user-id",
                            allowFiltering: true,
                            width: 100,
                            visible: false
                        },

                        {
                            field: "",
                            width: 15,
                            templateID: "#user-detail-validation",
                            allowFiltering: false,
                            visible: true
                        }
                ]

            });
        });
    </script>
}

@section MainSection{
    @await Html.PartialAsync("../UserManagement/_UserMenu")

    <div class="col-12 admin-page-container">
        <div class="admin-page-header col-12" id="user-title">
            <div class="d-flex align-items-center justify-content-between flex-wrap">
                <div class="d-flex align-items-start">
                    <a href="@Url.Action("index", "UserManagement")" data-bs-toggle="tooltip" data-bs-placement="top" title="[[[Users]]]" class="back-button me-3">
                        <i class="su su-arrow-back back-navigaion"> </i>
                    </a>
                    <div>
                        <div class="page-title" id="user-title-with-count">
                            [[[Database User Synchronization - USERS]]] (<span id="total-record-count"></span>)
                        </div>
                        <div class="page-description">
                            [[[Select Users to synchronize with Existing Database]]]
                        </div>
                    </div>
                </div>
                <div id="synchronize-users" class="d-none">
                    <span id="synchronize-database-users" class="primary-button app-btn-primary" title="[[[Synchronize Users with Existing Database]]]">
                        [[[Synchronize]]]
                    </span>
                </div>
            </div>
        </div>
        <div class="col-12 admin-page-body col-lg-12">
                <div class="no-padding">
                    <span class="db-userlist-info float-start">
                        [[[Only users imported from the database configured in this organization are listed here.]]]
                    </span>
                </div>
                <div id="search-area" class="float-end">
                    <input type="text" id="search-ad-users" class="float-start no-margin" placeholder="[[[Search users]]]" autocomplete="off" />
                    <span class="su close-icon su-inner-close float-end no-margin" id="clear-search" title="[[[Clear search]]]"></span>
                    <span class="su su-search search-icon float-end no-margin search-user" title="[[[Search]]]"></span>
                </div>
            <div id="user_grid"></div>
        </div>
    </div>
}