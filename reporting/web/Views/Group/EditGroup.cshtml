@using Syncfusion.Server.Base.Helpers

@addTagHelper *, Microsoft.FeatureManagement.AspNetCore
@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = "[[[Groups]]] - " + globalAppSettings.SystemSettings.OrganizationName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.HelpSiteUrl = GlobalAppSettings.GetHelpSiteUrl(HelpSiteUrlNames.EditGroup);
    var reportServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var granularPermissions = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var isAdmin = _identityResponse.IsAdmin;
    var isEmailRequired = globalAppSettings.SystemSettings.IsEmailRequired;
    var passwordPolicy = ServerAppConfig.PasswordPolicy;
    var isSelfHosted = ServerAppConfig.IsSelfHosted;
    bool isSingleDB = ViewBag.IsSingleDB;
}

@section scripts{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/theme/light.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/theme/light.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/editdelete.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/editdelete.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/groups.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/groups.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@ServerAppConfig.CustomFontUrl(globalAppSettings?.SystemSettings?.FontPreference, reportServerResourceUrl)" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/editgroup.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/editgroup.js")" crossorigin="anonymous"></script>
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/theme/light.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/theme/light.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/editdelete.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/editdelete.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@reportServerResourceUrl/cdn/css/groups.min.css" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/css/groups.min.css")" crossorigin="anonymous" />
        <link rel="stylesheet" asp-append-version="true" href="@ServerAppConfig.CustomFontUrl(globalAppSettings?.SystemSettings?.FontPreference, reportServerResourceUrl)" />
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="@reportServerResourceUrl/cdn/scripts/editgroup.min.js" integrity="@IntegrityTagHelper.GetIntegrity("wwwroot/cdn/scripts/editgroup.min.js")" crossorigin="anonymous"></script>
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>

    <script nonce="@Context.Items["ScriptNonce"]" type="text/javascript">
        var addGroupViewUrl = "@Url.Action("AddGroupView", "Group")";
        var saveGroupSettingsUrl = "@Url.Action("SaveGroupSettings", "Group")";
        var deleteGroupViewUrl = "@Url.Action("DeleteGroupView", "Group")";
        var deleteGroupUserViewUrl = "@Url.Action("DeleteGroupUserView", "Group")";
        var addUserInGroupUrl = "@Url.Action("AddUserInGroup", "Group")";
        var groupDetails = @Json.Serialize(ViewBag.groupDetails);
        groupDetails.GroupName = decodeHtmlAsString(groupDetails.GroupName);
        groupDetails.GroupDescription = decodeHtmlAsString(groupDetails.GroupDescription);
        var allUsers = @Json.Serialize(ViewBag.allUser);
        var groupId =@Context.Request.Query["groupId"];
        var checkMailSettingUrl = "@Url.Action("checkmailsettingsexist", "Administration")";
        var postactionUrl = "@Url.Action("postaction", "UserManagement")";
        var isPresentEmailId = "@Url.Action("IsPresentEmailId", "UserManagement")";
        var isUsernameExistsUrl = "@Url.Action("IsUsernameExists", "UserManagement")";
        var isEmailRequired = "@isEmailRequired";
        var groupPageNonce = "@Context.Items["ScriptNonce"]";
        var isSingleDB = @isSingleDB.ToString().ToLower();
        serverApp.controller("GroupEditController", function ($scope) {
            $scope.selectedRow = 1;
            $scope.page = 0;
            $scope.allGroupDetails = groupDetails;
            $scope.allUsers = allUsers;
        });
        $(document).ready(function () {
            var groupNameInput = document.getElementById('group-info-name');
            // Add the 'disabled' attribute if the condition is true
            if (isSingleDB && groupNameInput.value === "System Administrator") {
                groupNameInput.setAttribute('disabled', 'disabled');
            }
            GridLocalization();
            $("#group-info-name").removeAttr("placeholder");
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({ url: "@Url.Action("RefreshGroupUsers", "Group")?groupId="+groupId, adaptor: "UrlAdaptor" }),
                gridLines: ej.Grid.GridLines.None,
                allowPaging: true,
                pageSettings: { pageSize: 20 },
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                allowSelection: true,
                filterSettings: { filterType: "menu" },
                actionBegin: "fnOnEditGroupActionBegin",
                actionComplete: "fnOnUserGridActionComplete",
                dataBound: function (args) {
                    if (location.pathname.toLowerCase() === "/" || location.pathname.split("/")[location.pathname.split("/").length-1].toLowerCase() == "dashboards") {
                        refreshScroller();
                    }
                    $('[data-bs-toggle="tooltip"]').tooltip();
                },
                enableRowHover: true,
                columns: [
                    {
                        allowSorting: true,
                        headerText: "[[[Name]]]",
                        width: 100,
                        field: "DisplayName",
                        templateID: "#nametemplate",
                        headerTemplateID: "#nameheader",
                        type: "string",
                        allowFiltering: true
                    },
                    {
                        allowSorting: true,
                        headerText: "[[[Username]]]",
                        width: 100,
                        field: "Username",
                        templateID: "#UsernameTemplate",
                        headerTemplateID: "#UsernameHeader",
                        type: "string",
                        allowFiltering: true,
                        visible: isSelfHosted
                    },
                    {
                        field: "Email",
                        templateID: "#emailtemplate",
                        headerText: "[[[Email Address]]]",
                        width: 180,
                        type: "string",
                        allowFiltering: true,
                        headerTemplateID: "#emailheader"
                    },

                    {

                        template: true,
                        allowSorting: false,
                        templateID: "#actionstemplate",
                        width: 50,
                        allowFiltering: false
                    }
                ]
            });

            $("#delete-group-area").ejDialog({
                width: "499px",
                showOnInit: false,
                allowDraggable: true,
                enableResize: false,
                showHeader: false,
                title: "[[[Delete Group]]]",
                enableModal: true,
                closeOnEscape: true,
                close: ''
            });
            var deleteGroupWaitingPopupTemplateId = createLoader("delete-group-area_wrapper");
			$("#delete-group-area_wrapper").ejWaitingPopup({ template:$("#" + deleteGroupWaitingPopupTemplateId) });
        });
        $("#user-list").selectpicker('destroy');
        $("#user-list").selectpicker();
        $(document).ready(function(){
            for(var i=0;i<$(".dropdown-menu .selectpicker li").length;i++)
            {
                var hovertext = $(".dropdown-menu .selectpicker li").eq(i).find("a .text").text();
                $(".dropdown-menu .selectpicker li ").eq(i).find('a').attr("title",hovertext);
            }
        });
    </script>
    @if (isSelfHosted)
    {
        <script nonce="@Context.Items["ScriptNonce"]">
            var minimumLength = "@passwordPolicy.MinimumLength";
            var lowerCaseRequired = "@passwordPolicy.LowerCaseRequired";
            var upperCaseRequired = "@passwordPolicy.UpperCaseRequired";
            var numberRequired = "@passwordPolicy.NumberRequired";
            var specialCharactersRequired = "@passwordPolicy.SpecialCharactersRequired";
        </script>
    }
    @await Html.PartialAsync("~/Views/Shared/_LoaderIcon.cshtml")
}
@section MainSection{
    @await Html.PartialAsync("../UserManagement/_UserMenu")
    <feature name=@FeatureManagement.Yokogawa>
        <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="nametemplate">
            <a class="item-name grid-content" title="{{:DisplayName}}" data-bs-toggle="tooltip" href="@Url.Action("ViewProfile", "UserManagement")?id={{:UserId}}">{{:DisplayName}}</a>
        </script>
    </feature>
    <feature name=@FeatureManagement.Yokogawa negate="true">
        <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="nametemplate">
            <span class="item-name grid-content" title="{{:DisplayName}}" data-bs-toggle="tooltip">{{:DisplayName}}</span>
        </script>
    </feature>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="UsernameTemplate">
        <span class="grid-content" title="{{:Username}}" data-bs-toggle="tooltip">{{:Username}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="emailtemplate">
        <span class="grid-content" title="{{:Email}}" data-bs-toggle="tooltip">{{:CanShowEmail ? Email : ""}}</span>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="nameheader">
        <div class="item-name">[[[Name]]]</div>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="UsernameHeader">
        <div class="item-name">[[[Username]]]</div>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="emailheader">
        <div class="item-header">[[[Email Address]]]</div>
    </script>
    <script nonce="@Context.Items["ScriptNonce"]" type="text/x-jsrender" id="actionstemplate">
        {{if @Convert.ToInt32(Context.Request.Query["groupId"])!=1}}
        <div>
            <span><a href="#" class="delete-user prevent-default-action" title="" data-username="{{:DisplayName}}" data-userid="{{:UserId}}"><i class="su su-close"></i> [[[Remove]]]</a></span>
        </div>
        {{else UserId != @ViewBag.CurrentUserId}}
        <div>
            <span><a href="#" class="delete-user prevent-default-action" title="" data-username="{{:DisplayName}}" data-userid="{{:UserId}}"><i class="su su-close"></i> [[[Remove]]]</a></span>
        </div>
        {{/if}}
    </script>

    <div id="base-container" role="tabpanel" class="admin-page-container float-end col-lg-12" ng-app="serverApp" ng-controller="GroupEditController">
        <div id="group-header" class="row align-items-center admin-page-header import-area">
            <!-- Left Side: Back Arrow + Group Name -->
            <div class="col-md-6 d-flex align-items-center p-0 flex-wrap">
                <a class="back-button d-flex align-items-center me-2"
                   href="@Url.Action("viewgroup", "group")/@Context.Request.Query["groupId"]"
                   data-bs-toggle="tooltip" data-bs-placement="top" title="[[[View Group]]]">
                    <i class="su su-arrow-back back-navigaion img-size"></i>
                </a>
                <h2 class="page-title adjust-style-for-backarrow header m-0"
                    ng-bind="allGroupDetails.GroupName"
                    title="{{allGroupDetails.GroupName}}"
                    maxlength="60">
                </h2>
            </div>

            <!-- Right Side: Manage Dropdown -->
            <div class="col-md-6 text-end p-0">
                <div class="dropdown d-inline-block">
                    <button class="btn dropdown-toggle primary-button app-btn-primary"
                            data-bs-toggle="dropdown"
                            title="[[[Manage]]]">
                        <span>[[[Manage]]]</span>
                        <span class="caret"></span>
                    </button>

                    <ul class="dropdown-menu manage-group-dropdown multi-level" role="menu" id="dropdown-options">
                        @if (ViewBag.IsLocalDirectory)
                        {
                            <feature name=@FeatureManagement.Yokogawa>
                                <li id="add-user-button" title="[[[Add user]]]">
                                    <a href="#" class="dropdown-item prevent-default-action"
                                       data-bs-toggle="tooltip" data-bs-placement="top"
                                       title="[[[Add user]]]">
                                        <i class="su su-user-add me-2"></i>
                                        <span>[[[Add User]]]</span>
                                    </a>
                                </li>
                            </feature>
                        }

                        <feature name=@FeatureManagement.Yokogawa negate="true">
                            @if ((isAdmin || granularPermissions[PermissionEntity.UsersandGroups]) && ViewBag.IsLocalDirectory)
                            {
                                <li id="add-user-button" title="[[[Add user]]]">
                                    <a href="#" class="dropdown-item prevent-default-action"
                                       data-bs-toggle="tooltip" data-bs-placement="top"
                                       title="[[[Add user]]]">
                                        <i class="su su-user-add me-2"></i>
                                        <span>[[[Add User]]]</span>
                                    </a>
                                </li>
                            }
                        </feature>

                        <feature name=@FeatureManagement.Yokogawa>
                            @if (ViewBag.IsLocalDirectory && Convert.ToInt32(Context.Request.Query["groupId"]) != 1)
                            {
                                <li id="add-owner-button"
                                    title="[[[Add Owner]]]"
                                    data-groupid="@Context.Request.Query["groupId"]"
                                    data-groupname="{{allGroupDetails.GroupName}}">
                                    <a href="#" class="dropdown-item prevent-default-action"
                                       data-bs-toggle="tooltip" data-bs-placement="top"
                                       title="[[[Add Owner]]]">
                                        <i class="su su-add-owner me-2"></i>
                                        <span>[[[Add Owner]]]</span>
                                    </a>
                                </li>
                            }
                        </feature>

                        @if (isAdmin || granularPermissions[PermissionEntity.AllPermissions] || granularPermissions[PermissionEntity.SpecificPermissions])
                        {
                            <li>
                                <a class="dropdown-item"
                                   href="@Url.Action("grouppermission", "permission")?groupId=@Context.Request.Query["groupId"]"
                                   data-bs-toggle="tooltip" data-bs-placement="top"
                                   title="[[[Manage Permissions]]]">
                                    <i class="su su-manage-permission me-2"></i>
                                    <span>[[[Manage Permissions]]]</span>
                                </a>
                            </li>
                        }

                        @if ((isAdmin || granularPermissions[PermissionEntity.UsersandGroups] || granularPermissions[PermissionEntity.SpecificGroup]) && Convert.ToInt32(Context.Request.Query["groupId"]) != 1)
                        {
                            <li id="delete-button" class="delete"
                                title="[[[Delete Group]]]"
                                data-groupid="@Context.Request.Query["groupId"]"
                                data-groupname="{{allGroupDetails.GroupName}}">
                                <a href="#" class="dropdown-item prevent-default-action"
                                   data-bs-toggle="tooltip" data-bs-placement="top"
                                   title="[[[Delete Group]]]">
                                    <i class="su su-delete me-2"></i>
                                    <span>[[[Delete Group]]]</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="active-directory-form col-lg-12 admin-page-body">
            <form class="tab-content col-12 group-form" id="info-container" autocomplete="off">
                <div class="row">
                    <div class="group-info-label col-2 float-end text-right">[[[Name]]]<span class="mandatory">*</span></div>
                    <div class="group-info-text col-md-6 float-end" id="group-name">
                        <input type="text" autocomplete="off" placeholder="[[[Group name]]]" name="groupname" ng-bind="allGroupDetails.GroupName" ng-value="allGroupDetails.GroupName" class="form-control NotificationContent" maxlength="60" id="group-info-name" />
                        <span id="invalid-groupname" class="error-message" title="[[[Please enter group name]]]" data-content=""></span>
                    </div>
                </div>
                <div class="row">
                    <div class="group-info-label col-md-2 col-2 float-end text-right ">[[[Description]]]</div>
                    <div class="group-info-text col-md-6 float-end">
                        <textarea class="form-control notification-content" maxlength="1024" id="group-info-description" ng-bind="allGroupDetails.GroupDescription"></textarea>
                        <div id="required-content">
                            [[[*1024 characters maximum]]]
                        </div>
                    </div>
                </div>
                <div class="group-info-label col-md-4 col-4 float-end"></div>
                <div class="col-md-4 col-5 float-end margin-left">
                    <span id="group-edit-confirmation"></span>
                    <input id="group-title-container-save-button" title="" class="group-save-button float-end primary-button app-btn-primary small-inner-margin no-margin" type="button" value="[[[Save]]]" name="save">
                </div>
            </form>
            <input type="hidden" name="hiddengroupId" id="hidden-group-id" value="@Context.Request.Query["groupId"]" />
            <div id="people-container" class="tab-content col-md-12 col-12 page-inner-small-padding droppable">
                <div class="col-12 float-end user-content">
                    <span style="" class="user-list-text">[[[Add user]]] :</span>
                    <div id="user-list-container">
                        <select class="selectpicker" multiple autofocus="" data-size="8" data-none-results-text="[[[No results match]]]" data-live-search="true" data-actions-box="true" title='[[[Select user(s)]]]' id="user-list" style="float: right;">
                            <option ng-repeat="user in allUsers| orderBy:'DisplayName'" value="{{user.UserId}}" title="{{user.DisplayName}}">{{user.DisplayName}}</option>
                        </select>
                    </div>
                    <input id="user-save-button" disabled="" title="[[[Add selected user(s) to the group]]]" class="group-save-button primary-button app-btn-primary" type="button" value="[[[Add]]]" name="save" />
                    <div id="search-area" class="float-end">
                        <input type="text" id="search-group-users" class="float-start no-margin" placeholder="[[[Search users]]]" autocomplete="off" />
                        <span class="su su-inner-close close-icon float-end no-margin clear-search" id="clear-search" title="[[[Clear search]]]"></span>
                        <span class="su su-search search-group-users float-end no-margin" title="[[[Search users]]]"></span>
                    </div>
                </div>
                <div id="Grid" data-gridname="EditGroup" class="grid">
                </div>
            </div>
        </div>
    </div>
    <div id="delete-group-area" class="no-padding">
        <div style="border: 0;" id="delete-group-wrap" border="0" width="100%" height="100%"></div>
    </div>
    @await Html.PartialAsync("../UserManagement/_UserAddDialog", globalAppSettings)
    @await Html.PartialAsync("../Items/_SharePermission")
    <environment include="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script nonce="@Context.Items["ScriptNonce"]" asp-append-version="true" src="~/js/localizationcontent.js?c=@System.Globalization.CultureInfo.CurrentCulture"></script>
    </environment>
}